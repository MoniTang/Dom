{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","String","innerText","textContent","html","style","Object","object","key","class","add","classNme","classList","className","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","childNodes","siblings","Array","from","filter","n","next","x","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.ba016357.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    //新增\r\n    create(string) {\r\n        //新增节点\r\n        const container = document.createElement(\"template\");\r\n        //trim()去掉两边的空格,使用template时,用content获取元素\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    //新增弟弟\r\n    after(node, node2) {\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n\r\n    },\r\n    //新增哥哥\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n\r\n    },\r\n    //新增儿子\r\n    append(parent, node) {\r\n        parent.appendChild(node);\r\n\r\n    },\r\n    //新增爸爸\r\n    wrap(node, parent) {\r\n        dom.before(node, parent);\r\n        dom.append(parent, node);\r\n\r\n    },\r\n    //删除\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node) {\r\n        const array = []\r\n        let firstChild = node.firstChild\r\n        while (firstChild) {\r\n            array.push(dom.remove(node.firstChild))\r\n            firstChild = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    //修改\r\n    //用于读写属性\r\n    attr(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    //用于读写文本内容\r\n    text(node, String) {\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = String//ie\r\n            } else {\r\n                node.textContent = String//firefox/Chrome\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    //用于读写 HTML 内容\r\n    html(node, string) {\r\n        if (arguments === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    //用于修改 style\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    class: {\r\n        add(node, classNme) {\r\n            node.classList.add(classNme)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    // 用于添加事件监听\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    // 用于删除事件监听\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    //用于获取标签或标签们\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    // dom.parent(node) 用于获取父元素\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    // dom.children(node) 用于获取子元素\r\n    children(node) {\r\n        return node.childNodes\r\n    },\r\n    // dom.siblings(node) 用于获取兄弟姐妹元素\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children)\r\n            .filter(n => n !== node)\r\n    },\r\n    // dom.next(node) 用于获取弟弟\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    // dom.previous(node) 用于获取哥哥\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    // dom.each(nodes, fn) 用于遍历所有节点\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    // dom.index(node) 用于获取排行老几\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n\r\n    },\r\n\r\n\r\n\r\n};"]}